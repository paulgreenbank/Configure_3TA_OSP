---
## Test 3Tier Application deployment

## RedHat Ansible Boot Camp homework assignment
## Playbook have been written as a PoC for a 3Tier Application deployment
## All playbook have been written via Ansible Core and used in Ansible Tower

## Created a written by Paul Greenbank - Technical Consultant for Open System Specialists

## Playbook description:
#
# Playbook which tests the deployed application components, URL returned by HAProxy, Postgres service,
# Tomcat service and deployed html pages.
# All aspects of the application are tested so issues in the deployment can be isolated sine during the 
# Ansible Tower workflow the OpenStack instances are destroyed on failure.
#

## Playbook enhancements post PoC:
#
# Further investigation into testing multiple HAProxy frontends needs to be done, the current play 
# returns the content of all front ends into the webpage register however only the first frontend index 
# is checked for content.
# No Postgres content is tested only that the service is up and running.
#

- hosts: jumpbox
  gather_facts: false
  roles:
    - { role: openstack_hosts, tags: openstack }

- name: Check contents returned from HAProxy
  hosts: jumpbox
  gather_facts: false
  tasks:
    - name: Check URL content returned from first frontend HAProxy
      uri:
        url: http://{{ item }}
        return_content: yes
      register: webpage
      with_inventory_hostnames:
        - frontends

## Content check currently restricted to first frontend server content

    - name: Fail if "Ansible has done its job" is not in the page content
      fail: mgs="Incorrect content returned from Proxy"
      when: "'Ansible has done its job' not in webpage.results.0.content"

- name: Check Postgres for 3Tier application
  hosts: appsdb
  gather_facts: false
  tasks:
    - name: Check Postgres service is Running
      command: systemctl status postgresql
      register: postgres

    - name: Fail if service status doesn't return "active (running)"
      fail: msg="PostgreSQL is not running"
      when: "'active (running)' not in postgres.stdout"
        
- name: Check Tomcat for 3Tier application
  hosts: apps
  gather_facts: true
  become: yes
  tasks:
    - name: Check Tomcat service is Running
      command: systemctl status tomcat
      register: tomcat

    - name: Fail if service status doesn't return "active (running)"
      fail: msg="Tomcat is not running"
      when: "'active (running)' not in tomcat.stdout"

    - name: Check Tomcat web content
      command: cat /usr/share/tomcat/webapps/ansible/index.html
      register: web_content

    - name: Fail if web content doesn't contain "Ansible has done its job"
      fail: msg="Incorrect web content on {{ ansible_hostname }}"
      when: "'Ansible has done its job' not in web_content.stdout"


